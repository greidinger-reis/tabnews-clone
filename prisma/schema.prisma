// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id       String    @id @default(cuid())
    slug     String
    authorId String
    title    String
    content  String
    source   String?
    Comment  Comment[]
    Likes    Like[]

    author User @relation(fields: [authorId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Like {
    id        String  @id @default(cuid())
    postId    String?
    userId    String
    commentId String?

    Post    Post?    @relation(fields: [postId], references: [id])
    User    User     @relation(fields: [userId], references: [id])
    Comment Comment? @relation(fields: [commentId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Comment {
    id       String  @id @default(cuid())
    postId   String
    parentId String?
    authorId String
    content  String
    likes    Like[]

    parent   Comment?  @relation("CommentToComment", fields: [parentId], references: [id], onDelete: Cascade)
    children Comment[] @relation("CommentToComment")
    post     Post      @relation(fields: [postId], references: [id])
    author   User      @relation(fields: [authorId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id        String    @id @default(cuid())
    username  String    @unique
    email     String    @unique
    password  String
    activated Boolean   @default(false)
    Post      Post[]
    Comment   Comment[]
    Likes     Like[]
}
